{"version":3,"sources":["reducers/todoReducer.js","reducers/index.js","actions/types.js","store/store.js","actions/todoActions.js","components/FormDialog.jsx","components/Todo.jsx","components/Pagination.jsx","components/Buttons.jsx","components/CreateTodo.jsx","App.jsx","serviceWorker.js","index.js"],"names":["initialState","items","currentPage","itemsPerPage","combineReducers","todos","state","action","type","payload","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","changePage","postData","dispatch","FormDialog","props","handleClick","setState","newValue","edit","open","handleChange","event","target","value","handleSave","trim","data","id","editTodo","Button","className","variant","color","size","startIcon","onClick","Dialog","aria-labelledby","this","onClose","DialogContent","TextField","autoFocus","margin","label","inputProps","maxLength","autoComplete","fullWidth","onChange","DialogActions","Component","connect","axios","patch","then","res","Todo","componentDidMount","getTodos","handleCheck","checked","isCompleted","checkTodo","handleDelete","indexOfLastItem","indexofFirstItem","slice","length","removeTodo","map","element","key","_id","Checkbox","get","delete","Pagination","number","pageNumbers","i","Math","ceil","push","style","display","marginRight","paddingRight","justifyContent","alignItems","marginBottom","Buttons","CreateTodo","handleSubmit","preventDefault","post","addTodo","onSubmit","required","App","Container","maxWidth","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa5e70d9.chunk.js","sourcesContent":["import {\n\tGET_TODOS,\n\tNEW_TODO,\n\tCHECK_TODO,\n\tREMOVE_TODO,\n\tCHANGE_PAGE,\n\tEDIT_TODO,\n} from '../actions/types';\n\nconst initialState = {\n\titems: [],\n\tcurrentPage: 1,\n\titemsPerPage: 10,\n};\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_TODOS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: action.payload,\n\t\t\t};\n\t\tcase NEW_TODO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: action.payload,\n\t\t\t};\n\t\tcase CHECK_TODO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: action.payload,\n\t\t\t};\n\t\tcase REMOVE_TODO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: action.payload,\n\t\t\t};\n\t\tcase CHANGE_PAGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPage: action.payload,\n\t\t\t};\n\t\tcase EDIT_TODO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport todoReducer from './todoReducer';\n\nexport default combineReducers({\n\ttodos: todoReducer,\n});\n","export const GET_TODOS = 'GET_TODOS';\nexport const NEW_TODO = 'NEW_TODO';\nexport const CHECK_TODO = 'CHECK_TODO';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\nexport const TOGGLE_DONE = 'TOGGLE_DONE';\nexport const EDIT_TODO = 'EDIT_TODO';\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcompose(\n\t\tapplyMiddleware(...middleWare),\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t)\n);\n\nexport default store;\n","import {\n\tGET_TODOS,\n\tNEW_TODO,\n\tCHECK_TODO,\n\tREMOVE_TODO,\n\tCHANGE_PAGE,\n\tEDIT_TODO,\n} from './types';\nimport axios from 'axios';\n\nexport const getTodos = () => (dispatch) => {\n\taxios.get('https://exceed-react.herokuapp.com/list').then((res) =>\n\t\tdispatch({\n\t\t\ttype: GET_TODOS,\n\t\t\tpayload: res.data,\n\t\t})\n\t);\n};\n\nexport const addTodo = (postData) => (dispatch) => {\n\taxios\n\t\t.post('https://exceed-react.herokuapp.com/list', {\n\t\t\tvalue: postData.value,\n\t\t})\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: NEW_TODO,\n\t\t\t\tpayload: res.data,\n\t\t\t})\n\t\t);\n};\n\nexport const checkTodo = (postData) => (dispatch) => {\n\taxios\n\t\t.patch(`https://exceed-react.herokuapp.com/list/${postData.id}`, {\n\t\t\tisCompleted: postData.isCompleted,\n\t\t})\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: CHECK_TODO,\n\t\t\t\tpayload: res.data,\n\t\t\t})\n\t\t);\n};\n\nexport const removeTodo = (postData) => (dispatch) => {\n\taxios\n\t\t.delete(`https://exceed-react.herokuapp.com/list/${postData}`)\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: REMOVE_TODO,\n\t\t\t\tpayload: res.data,\n\t\t\t})\n\t\t);\n};\n\nexport const changePage = (postData) => (dispatch) => {\n\tdispatch({\n\t\ttype: CHANGE_PAGE,\n\t\tpayload: postData,\n\t});\n};\n\nexport const editTodo = (postData) => (dispatch) => {\n\taxios\n\t\t.patch(`https://exceed-react.herokuapp.com/list/single/${postData.id}`, {\n\t\t\tvalue: postData.newValue,\n\t\t})\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: EDIT_TODO,\n\t\t\t\tpayload: res.data,\n\t\t\t})\n\t\t);\n};\n","import React, { Component } from 'react';\nimport {\n\tTextField,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tButton,\n} from '@material-ui/core/';\nimport Edit from '@material-ui/icons/Edit';\nimport { connect } from 'react-redux';\nimport { editTodo } from '../actions/todoActions';\nimport propTypes from 'prop-types';\n\nclass FormDialog extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewValue: this.props.edit,\n\t\t\topen: false,\n\t\t};\n\t}\n\n\thandleClick = () => {\n\t\tthis.setState({\n\t\t\tnewValue: this.props.edit,\n\t\t\topen: !this.state.open,\n\t\t});\n\t};\n\n\thandleChange = (event) => {\n\t\tthis.setState({\n\t\t\tnewValue: event.target.value,\n\t\t});\n\t};\n\n\thandleSave = () => {\n\t\tif (this.state.newValue.trim()) {\n\t\t\tconst data = {\n\t\t\t\tnewValue: this.state.newValue.trim(),\n\t\t\t\tid: this.props.id,\n\t\t\t};\n\t\t\tthis.props.editTodo(data);\n\t\t\tthis.setState({\n\t\t\t\topen: false,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\topen: false,\n\t\t\t});\n\t\t}\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tclassName='btn-del'\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tsize='small'\n\t\t\t\t\tstartIcon={<Edit />}\n\t\t\t\t\tonClick={() => this.handleClick()}\n\t\t\t\t>\n\t\t\t\t\tEdit\n\t\t\t\t</Button>\n\t\t\t\t<Dialog\n\t\t\t\t\taria-labelledby='form-dialog-title'\n\t\t\t\t\topen={this.state.open}\n\t\t\t\t\tonClose={this.handleClick}\n\t\t\t\t>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tmargin='dense'\n\t\t\t\t\t\t\tlabel='Edit'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tinputProps={{ maxLength: 25 }}\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvalue={this.state.newValue}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<Button color='primary' onClick={this.handleSave}>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nFormDialog.propTypes = {\n\teditTodo: propTypes.func.isRequired,\n};\n\nexport default connect(null, { editTodo })(FormDialog);\n","import React, { Component } from 'react';\nimport { Button, Checkbox } from '@material-ui/core/';\nimport Delete from '@material-ui/icons/Delete';\nimport FormDialog from './FormDialog';\nimport { connect } from 'react-redux';\nimport {\n\tgetTodos,\n\tcheckTodo,\n\tremoveTodo,\n\tchangePage,\n} from '../actions/todoActions';\nimport propTypes from 'prop-types';\n\nclass Todo extends Component {\n\tcomponentDidMount = () => {\n\t\tthis.props.getTodos();\n\t};\n\n\thandleCheck = (event, id) => {\n\t\tconst checked = {\n\t\t\tisCompleted: event.target.checked,\n\t\t\tid: id,\n\t\t};\n\t\tthis.props.checkTodo(checked);\n\t};\n\n\thandleDelete = (id) => {\n\t\tconst indexOfLastItem = this.props.currentPage * this.props.itemsPerPage;\n\t\tconst indexofFirstItem = indexOfLastItem - this.props.itemsPerPage;\n\t\tconst currentItems = this.props.todos.slice(\n\t\t\tindexofFirstItem,\n\t\t\tindexOfLastItem\n\t\t);\n\t\tif (currentItems.length !== 1 || this.props.todos.length === 1) {\n\t\t\tthis.props.removeTodo(id);\n\t\t} else {\n\t\t\tthis.props.removeTodo(id);\n\t\t\tthis.props.changePage(this.props.currentPage - 1);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst indexOfLastItem = this.props.currentPage * this.props.itemsPerPage;\n\t\tconst indexofFirstItem = indexOfLastItem - this.props.itemsPerPage;\n\t\tconst currentItems = this.props.todos.slice(\n\t\t\tindexofFirstItem,\n\t\t\tindexOfLastItem\n\t\t);\n\n\t\tconst todos = currentItems.map((element) => {\n\t\t\treturn (\n\t\t\t\t<div key={element._id}>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tchecked={element.isCompleted}\n\t\t\t\t\t\t\tonChange={(event) => this.handleCheck(event, element._id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span id='text' className={element.isCompleted ? 'done' : ''}>\n\t\t\t\t\t\t\t{element.value}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div className='btn-div'>\n\t\t\t\t\t\t\t<FormDialog edit={element.value} id={element._id} />\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName='btn-del'\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\tonClick={() => this.handleDelete(element._id)}\n\t\t\t\t\t\t\t\tstartIcon={<Delete />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className='todos'>\n\t\t\t\t{this.props.todos.length ? <div>{todos}</div> : 'No tasks...'}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nTodo.propTypes = {\n\tgetTodos: propTypes.func.isRequired,\n\tcheckTodo: propTypes.func.isRequired,\n\tremoveTodo: propTypes.func.isRequired,\n\ttodos: propTypes.array.isRequired,\n\tcurrentPage: propTypes.any.isRequired,\n\titemsPerPage: propTypes.any.isRequired,\n\tchangePage: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\ttodos: state.todos.items,\n\tcurrentPage: state.todos.currentPage,\n\titemsPerPage: state.todos.itemsPerPage,\n});\n\nexport default connect(mapStateToProps, {\n\tgetTodos,\n\tcheckTodo,\n\tremoveTodo,\n\tchangePage,\n})(Todo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { changePage } from '../actions/todoActions';\n\nexport class Pagination extends Component {\n\thandleChange = (number) => {\n\t\tthis.props.changePage(number);\n\t};\n\trender() {\n\t\tconst pageNumbers = [];\n\n\t\tfor (\n\t\t\tlet i = 1;\n\t\t\ti <= Math.ceil(this.props.todos.length / this.props.itemsPerPage);\n\t\t\ti++\n\t\t) {\n\t\t\tpageNumbers.push(i);\n\t\t}\n\t\treturn (\n\t\t\t<ul\n\t\t\t\tclassName='mainpag'\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tmarginRight: 150,\n\t\t\t\t\tpaddingRight: 20,\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tmarginBottom: 10,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{pageNumbers.map((number) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={number} className='pagination'>\n\t\t\t\t\t\t\t<button onClick={() => this.handleChange(number)}>\n\t\t\t\t\t\t\t\t{number}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nPagination.propTypes = {\n\ttodos: propTypes.array.isRequired,\n\tcurrentPage: propTypes.any.isRequired,\n\titemsPerPage: propTypes.any.isRequired,\n\tchangePage: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\ttodos: state.todos.items,\n\tcurrentPage: state.todos.currentPage,\n\titemsPerPage: state.todos.itemsPerPage,\n});\n\nexport default connect(mapStateToProps, { changePage })(Pagination);\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport Pagination from './Pagination';\n\nclass Buttons extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='buttons'>\n\t\t\t\t<div>\n\t\t\t\t\t<Pagination />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t>\n\t\t\t\t\t\tUncomplete Tasks\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className='margin-top'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t>\n\t\t\t\t\t\tRemove Completed Tasks\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nButtons.propTypes = {\n\ttodos: propTypes.array.isRequired,\n\tcurrentPage: propTypes.any.isRequired,\n\titemsPerPage: propTypes.any.isRequired,\n\tchangePage: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\ttodos: state.todos.items,\n\tcurrentPage: state.todos.currentPage,\n\titemsPerPage: state.todos.itemsPerPage,\n});\n\nexport default connect(mapStateToProps)(Buttons);\n","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { addTodo, changePage } from '../actions/todoActions';\n\nclass CreateTodo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: '',\n\t\t};\n\t}\n\n\tonChange = (event) => {\n\t\tthis.setState({\n\t\t\tvalue: event.target.value,\n\t\t});\n\t};\n\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst post = {\n\t\t\tvalue: this.state.value,\n\t\t};\n\t\tconst indexOfLastItem = this.props.currentPage * this.props.itemsPerPage;\n\t\tconst indexofFirstItem = indexOfLastItem - this.props.itemsPerPage;\n\t\tconst currentItems = this.props.todos.slice(\n\t\t\tindexofFirstItem,\n\t\t\tindexOfLastItem\n\t\t);\n\t\tif (currentItems.length === 10) {\n\t\t\tif (this.state.value.trim().length) {\n\t\t\t\tthis.props.addTodo(post);\n\t\t\t\tthis.props.changePage(this.props.currentPage + 1);\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tvalue: '',\n\t\t\t});\n\t\t} else {\n\t\t\tthis.state.value.trim().length\n\t\t\t\t? this.props.addTodo(post)\n\t\t\t\t: this.setState({\n\t\t\t\t\t\tvalue: '',\n\t\t\t\t  });\n\t\t\tthis.setState({\n\t\t\t\tvalue: '',\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form id='form' onSubmit={this.handleSubmit}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel='Enter Task'\n\t\t\t\t\t\tid='outlined-size-small'\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\tinputProps={{ maxLength: 25 }}\n\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tsize='medium'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Task\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nCreateTodo.propTypes = {\n\taddTodo: propTypes.func.isRequired,\n\tchangePage: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\ttodos: state.todos.items,\n\tcurrentPage: state.todos.currentPage,\n\titemsPerPage: state.todos.itemsPerPage,\n});\n\nexport default connect(mapStateToProps, { addTodo, changePage })(CreateTodo);\n","import React, { Component } from 'react';\n// import { Todo, Buttons, CreateTodo } from \"./components/\";\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport Todo from './components/Todo';\nimport Buttons from './components/Buttons';\nimport CreateTodo from './components/CreateTodo';\nimport { Container } from '@material-ui/core';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<Container id='container' maxWidth='md xs'>\n\t\t\t\t\t<CreateTodo />\n\t\t\t\t\t<div id='todo'>\n\t\t\t\t\t\t<Todo />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Buttons />\n\t\t\t\t</Container>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about sevice workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}