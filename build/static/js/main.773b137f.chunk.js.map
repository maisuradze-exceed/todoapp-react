{"version":3,"sources":["actions/services.js","actions/actions.js","components/todo/FormDialog.jsx","components/todo/TodoItems.jsx","components/todo/Todo.jsx","components/todo/Pagination.jsx","components/todo/Buttons.jsx","components/todo/CreateTodo.jsx","components/todo/TodoPage.jsx","components/Navbar.jsx","components/login/Login.jsx","components/signup/SignUp.jsx","App.jsx","reducers/todoReducer.js","reducers/userReducer.js","reducers/index.js","store/store.js","serviceWorker.js","index.js"],"names":["fetchTodos","token","axios","get","headers","then","response","data","catch","error","addTodo","user","post","value","checkTodo","patch","id","isCompleted","deleteTodo","delete","editTodo","newValue","deleteAllTodo","ids","completeAllTodo","check","uncompleteAllTodo","getTodos","type","payload","changePage","logInUser","logOut","FormDialog","state","props","edit","open","handleClick","setState","handleChange","event","target","handleSave","actions","close","trim","res","Button","className","variant","color","size","startIcon","onClick","Dialog","aria-labelledby","this","onClose","DialogContent","TextField","autoFocus","margin","label","inputProps","maxLength","autoComplete","fullWidth","onChange","DialogActions","Component","connect","dispatch","bindActionCreators","TodoItems","del","todos","map","element","key","_id","Checkbox","checked","Todo","componentDidMount","isLoggedIn","handleCheck","handleDelete","currentItems","currentPage","length","items","Pagination","number","pageNumbers","itemsPerPage","i","Math","ceil","push","style","display","marginRight","justifyContent","alignItems","marginBottom","Buttons","handleRemove","handleComplete","handleUncomplete","todo","checkItems","count","CreateTodo","handleSubmit","preventDefault","clear","onSubmit","required","App","indexOfLastItem","indexOfFirstItem","slice","some","every","Container","maxWidth","Navbar","unAuthenticated","to","authenticated","localStorage","removeItem","textDecoration","AppBar","position","Toolbar","Typography","AssignmentTurnedIn","React","Login","email","password","failed","handleEmailChange","handlePasswordChange","userData","toLowerCase","setItem","defaults","common","getItem","decodedToken","jwtDecode","component","CssBaseline","Avatar","severity","name","FormControlLabel","control","Grid","container","item","xs","Box","mt","users","SignUp","handlePassChange","handleConfPassChange","confirmPassword","errorMessage","minLength","Application","exp","Date","now","redirectUser","path","TodoPage","exact","initialState","combineReducers","action","middleWare","thunk","store","createStore","rootReducer","applyMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.773b137f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const fetchTodos = (token) => {\r\n  return axios\r\n    .get(`https://exceed-react.herokuapp.com/api/data/`, {\r\n      headers: { 'auth-token': `${token}` },\r\n    })\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const addTodo = (data, token, user) => {\r\n  return axios\r\n    .post(\r\n      `https://exceed-react.herokuapp.com/api/data/`,\r\n      {\r\n        value: data,\r\n        user,\r\n      },\r\n      {\r\n        headers: { 'auth-token': `${token}` },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const checkTodo = (data, token, user) => {\r\n  return axios\r\n    .patch(\r\n      `https://exceed-react.herokuapp.com/api/data/${data.id}`,\r\n      {\r\n        isCompleted: data.isCompleted,\r\n        user,\r\n      },\r\n      {\r\n        headers: { 'auth-token': `${token}` },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const deleteTodo = (id, token) => {\r\n  return axios\r\n    .delete(`https://exceed-react.herokuapp.com/api/data/${id}`, {\r\n      headers: { 'auth-token': `${token}` },\r\n    })\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const editTodo = (data, token, user) => {\r\n  return axios\r\n    .patch(\r\n      `https://exceed-react.herokuapp.com/api/data/single/${data.id}`,\r\n      {\r\n        value: data.newValue,\r\n        user,\r\n      },\r\n      {\r\n        headers: { 'auth-token': `${token}` },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const deleteAllTodo = (ids, token) => {\r\n  return axios\r\n    .delete(`https://exceed-react.herokuapp.com/api/data/multiple/${ids}`, {\r\n      headers: { 'auth-token': `${token}` },\r\n    })\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const completeAllTodo = (ids, token, user) => {\r\n  return axios\r\n    .patch(\r\n      `https://exceed-react.herokuapp.com/api/data/multiple/${ids}`,\r\n      {\r\n        check: true,\r\n        user,\r\n      },\r\n      {\r\n        headers: { 'auth-token': `${token}` },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const uncompleteAllTodo = (ids, token, user) => {\r\n  return axios\r\n    .patch(\r\n      `https://exceed-react.herokuapp.com/api/data/multiple/${ids}`,\r\n      {\r\n        check: false,\r\n        user,\r\n      },\r\n      {\r\n        headers: { 'auth-token': `${token}` },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n","export const GET_TODOS = 'GET_TODOS';\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const getTodos = (data) => ({\r\n  type: GET_TODOS,\r\n  payload: data,\r\n});\r\n\r\nexport const changePage = (data) => ({\r\n  type: CHANGE_PAGE,\r\n  payload: data,\r\n});\r\n\r\nexport const logInUser = (data) => ({\r\n  type: LOG_IN,\r\n  payload: data,\r\n});\r\n\r\nexport const logOut = () => ({\r\n  type: LOG_OUT,\r\n});\r\n","// Import from libraries\r\nimport React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\n// Import from redux\r\nimport { getTodos } from '../../actions/actions';\r\nimport { editTodo } from '../../actions/services';\r\n\r\n// Material UI\r\nimport {\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Button,\r\n} from '@material-ui/core/';\r\nimport Edit from '@material-ui/icons/Edit';\r\n\r\nclass FormDialog extends Component {\r\n  state = {\r\n    newValue: this.props.edit,\r\n    open: false,\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { edit } = this.props;\r\n    this.setState({\r\n      newValue: edit,\r\n      open: !this.state.open,\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      newValue: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSave = () => {\r\n    const {\r\n      id,\r\n      token,\r\n      user,\r\n      actions: { getTodos },\r\n    } = this.props;\r\n    const close = () =>\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    const data = {\r\n      newValue: this.state.newValue,\r\n      id: id,\r\n    };\r\n    if (this.state.newValue.trim()) {\r\n      editTodo(data, token, user).then((res) => getTodos(res, user));\r\n      close();\r\n    } else {\r\n      close();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          className='btn-del'\r\n          variant='contained'\r\n          color='primary'\r\n          size='small'\r\n          startIcon={<Edit />}\r\n          onClick={() => this.handleClick()}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Dialog\r\n          aria-labelledby='form-dialog-title'\r\n          open={this.state.open}\r\n          onClose={this.handleClick}\r\n        >\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin='dense'\r\n              label='Edit'\r\n              type='text'\r\n              inputProps={{ maxLength: 30 }}\r\n              autoComplete='off'\r\n              fullWidth\r\n              value={this.state.newValue}\r\n              onChange={this.handleChange}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color='primary' onClick={this.handleSave}>\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormDialog.propTypes = {\r\n  actions: propTypes.object.isRequired,\r\n  edit: propTypes.string.isRequired,\r\n  id: propTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: state.user.token,\r\n  user: state.user.user,\r\n});\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators({ getTodos }, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(FormDialog);\r\n","// Import from libraries\r\nimport React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\n// Import components\r\nimport FormDialog from './FormDialog';\r\n\r\n// Material UI\r\nimport { Button, Checkbox } from '@material-ui/core/';\r\nimport Delete from '@material-ui/icons/Delete';\r\n\r\nexport class TodoItems extends Component {\r\n\trender() {\r\n\t\tconst { data, check, del } = this.props;\r\n\t\tconst todos = data.map((element) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={element._id}>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\tchecked={element.isCompleted}\r\n\t\t\t\t\t\t\tonChange={(event) => check(event, element._id)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span id='text' className={element.isCompleted ? 'done' : ''}>\r\n\t\t\t\t\t\t\t{element.value}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className='btn-div'>\r\n\t\t\t\t\t\t\t<FormDialog edit={element.value} id={element._id} />\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName='btn-del'\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\tonClick={() => del(element._id)}\r\n\t\t\t\t\t\t\t\tstartIcon={<Delete />}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn <div>{todos}</div>;\r\n\t}\r\n}\r\n\r\nTodoItems.propTypes = {\r\n\tcheck: propTypes.func.isRequired,\r\n\tdata: propTypes.array.isRequired,\r\n\tdel: propTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItems;\r\n","// Import from libraries\r\nimport React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Import from redux\r\nimport { fetchTodos, checkTodo, deleteTodo } from '../../actions/services';\r\nimport { getTodos, changePage } from '../../actions/actions';\r\n\r\n// Import from components\r\nimport TodoItems from './TodoItems';\r\n\r\nclass Todo extends Component {\r\n  componentDidMount = () => {\r\n    if (this.props.isLoggedIn) {\r\n      const {\r\n        actions: { getTodos },\r\n        token,\r\n      } = this.props;\r\n      fetchTodos(token).then((res) => getTodos(res));\r\n    }\r\n  };\r\n\r\n  handleCheck = (event, id) => {\r\n    const {\r\n      actions: { getTodos },\r\n      token,\r\n      user,\r\n    } = this.props;\r\n    const checked = {\r\n      isCompleted: event.target.checked,\r\n      id,\r\n    };\r\n    checkTodo(checked, token, user).then((res) => getTodos(res));\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    const {\r\n      currentItems,\r\n      currentPage,\r\n      todos,\r\n      token,\r\n      actions: { getTodos, changePage },\r\n    } = this.props;\r\n    if (currentItems.length !== 1 || todos.length === 1) {\r\n      deleteTodo(id, token).then((res) => getTodos(res));\r\n    } else {\r\n      deleteTodo(id, token)\r\n        .then((res) => getTodos(res))\r\n        .then(changePage(currentPage - 1));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { currentItems, todos } = this.props;\r\n    return (\r\n      <ul className='todos'>\r\n        {todos.length ? (\r\n          <TodoItems\r\n            data={currentItems}\r\n            check={this.handleCheck}\r\n            del={this.handleDelete}\r\n          />\r\n        ) : (\r\n          <h3>No Tasks...</h3>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nTodo.propTypes = {\r\n  todos: propTypes.array.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  currentItems: propTypes.array.isRequired,\r\n  actions: propTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos.items,\r\n  currentPage: state.todos.currentPage,\r\n  isLoggedIn: state.user.isLoggedIn,\r\n  token: state.user.token,\r\n  user: state.user.user,\r\n});\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators({ getTodos, changePage }, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Todo);\r\n","// Import from libaries\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Import from redux\r\nimport { changePage } from '../../actions/actions';\r\n\r\nexport class Pagination extends Component {\r\n\thandleChange = (number) => {\r\n\t\tconst { changePage } = this.props.actions;\r\n\t\tchangePage(number);\r\n\t};\r\n\trender() {\r\n\t\tconst pageNumbers = [];\r\n\t\tconst { todos, itemsPerPage } = this.props;\r\n\r\n\t\tfor (let i = 1; i <= Math.ceil(todos.length / itemsPerPage); i++) {\r\n\t\t\tpageNumbers.push(i);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<ul\r\n\t\t\t\tclassName='mainpag'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tmarginRight: 60,\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\tmarginBottom: 10,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{pageNumbers.map((number) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={number} className='pagination'>\r\n\t\t\t\t\t\t\t<button onClick={() => this.handleChange(number)}>\r\n\t\t\t\t\t\t\t\t{number}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nPagination.propTypes = {\r\n\ttodos: propTypes.array.isRequired,\r\n\titemsPerPage: propTypes.number.isRequired,\r\n\tactions: propTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\ttodos: state.todos.items,\r\n\titemsPerPage: state.todos.itemsPerPage,\r\n});\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tactions: bindActionCreators({ changePage }, dispatch),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Pagination);\r\n","// Import from libraries\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport propTypes from 'prop-types';\r\n\r\n// Import from Components\r\nimport Pagination from './Pagination';\r\n\r\n// Import from redux\r\nimport { getTodos, changePage } from '../../actions/actions';\r\nimport {\r\n  deleteAllTodo,\r\n  completeAllTodo,\r\n  uncompleteAllTodo,\r\n} from '../../actions/services';\r\n\r\n// Material UI\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass Buttons extends Component {\r\n  handleRemove = () => {\r\n    const {\r\n      todos,\r\n      token,\r\n      actions: { getTodos, changePage },\r\n    } = this.props;\r\n    const ids = [];\r\n    todos.map((element) => {\r\n      if (element.isCompleted) {\r\n        ids.push(element._id);\r\n      }\r\n      return element;\r\n    });\r\n    deleteAllTodo(ids, token)\r\n      .then((res) => getTodos(res))\r\n      .then(changePage(1));\r\n  };\r\n\r\n  handleComplete = () => {\r\n    const {\r\n      currentItems,\r\n      token,\r\n      user,\r\n      actions: { getTodos },\r\n    } = this.props;\r\n    const ids = [];\r\n    currentItems.map((element) => {\r\n      if (!element.isCompleted) {\r\n        ids.push(element._id);\r\n      }\r\n      return null;\r\n    });\r\n    completeAllTodo(ids, token, user).then((res) => getTodos(res));\r\n  };\r\n\r\n  handleUncomplete = () => {\r\n    const {\r\n      currentItems,\r\n      token,\r\n      user,\r\n      actions: { getTodos },\r\n    } = this.props;\r\n    const ids = [];\r\n    currentItems.map((element) => {\r\n      if (element.isCompleted) {\r\n        ids.push(element._id);\r\n      }\r\n      return null;\r\n    });\r\n    uncompleteAllTodo(ids, token, user).then((res) => getTodos(res));\r\n  };\r\n  render() {\r\n    const { todos, todo, checkItems } = this.props;\r\n\r\n    const count = todos.length;\r\n    const items = (\r\n      <div className='buttons'>\r\n        <Pagination />\r\n        <div id='btns'>\r\n          {!checkItems ? (\r\n            <Button\r\n              variant='outlined'\r\n              className='btn'\r\n              size='large'\r\n              color='primary'\r\n              onClick={this.handleComplete}\r\n            >\r\n              Complete Tasks\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              variant='contained'\r\n              className='btn'\r\n              size='large'\r\n              color='primary'\r\n              onClick={this.handleUncomplete}\r\n            >\r\n              Uncomplete Tasks\r\n            </Button>\r\n          )}\r\n          {todo ? (\r\n            <Button\r\n              variant='contained'\r\n              className='btn'\r\n              size='large'\r\n              color='secondary'\r\n              onClick={this.handleRemove}\r\n            >\r\n              Remove Completed Tasks\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              variant='outlined'\r\n              className='btn'\r\n              size='large'\r\n              color='secondary'\r\n            >\r\n              Remove Completed Tasks\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n    return <div>{count ? items : ''}</div>;\r\n  }\r\n}\r\n\r\nButtons.propTypes = {\r\n  todos: propTypes.array.isRequired,\r\n  todo: propTypes.bool.isRequired,\r\n  currentItems: propTypes.array.isRequired,\r\n  actions: propTypes.object.isRequired,\r\n  checkItems: propTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos.items,\r\n  token: state.user.token,\r\n  user: state.user.user,\r\n});\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators({ getTodos, changePage }, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Buttons);\r\n","// Import from libraries\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Import from redux\r\nimport { addTodo } from '../../actions/services';\r\nimport { getTodos, changePage } from '../../actions/actions';\r\n\r\n// Material UI\r\nimport { TextField, Button } from '@material-ui/core';\r\n\r\nclass CreateTodo extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      currentItems,\r\n      currentPage,\r\n      token,\r\n      user,\r\n      actions: { getTodos, changePage },\r\n    } = this.props;\r\n    const post = this.state.value.trim();\r\n    const clear = () => this.setState({ value: '' });\r\n    if (currentItems.length === 10) {\r\n      if (post.length) {\r\n        addTodo(post, token, user)\r\n          .then((res) => getTodos(res, user))\r\n          .then(changePage(currentPage + 1))\r\n          .then(clear());\r\n      }\r\n    } else {\r\n      post.length\r\n        ? addTodo(post, token, user).then((res) => getTodos(res, user))\r\n        : clear();\r\n    }\r\n    clear();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form id='form' onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            label='Enter Task'\r\n            id='outlined-size-small'\r\n            variant='outlined'\r\n            size='small'\r\n            autoComplete='off'\r\n            inputProps={{ maxLength: 30 }}\r\n            value={this.state.value}\r\n            onChange={this.onChange}\r\n            required\r\n          />\r\n          <Button\r\n            color='primary'\r\n            variant='outlined'\r\n            size='medium'\r\n            type='submit'\r\n          >\r\n            Add Task\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateTodo.propTypes = {\r\n  todos: propTypes.array.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  currentItems: propTypes.array.isRequired,\r\n  actions: propTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos.items,\r\n  currentPage: state.todos.currentPage,\r\n  token: state.user.token,\r\n  user: state.user.user,\r\n});\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators({ getTodos, changePage }, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(CreateTodo);\r\n","// Import from libraries\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// Import components\r\nimport Todo from './Todo';\r\nimport Buttons from './Buttons';\r\nimport CreateTodo from './CreateTodo';\r\n\r\n// Material UI And Styles\r\nimport { Container } from '@material-ui/core';\r\nimport '../styles/Todo.css';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\tconst { itemsPerPage, currentPage, todos } = this.props;\r\n\t\tconst indexOfLastItem = currentPage * itemsPerPage;\r\n\t\tconst indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n\t\tconst currentItems = todos.slice(indexOfFirstItem, indexOfLastItem);\r\n\t\tconst todo = todos.some((element) => element.isCompleted === true);\r\n\t\tconst checkItems = currentItems.every(\r\n\t\t\t(element) => element.isCompleted === true\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<Container id='container' maxWidth='md'>\r\n\t\t\t\t<CreateTodo currentItems={currentItems} />\r\n\t\t\t\t<Todo currentItems={currentItems} />\r\n\t\t\t\t<Buttons\r\n\t\t\t\t\tcurrentItems={currentItems}\r\n\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\tcheckItems={checkItems}\r\n\t\t\t\t/>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\ttodos: state.todos.items,\r\n\tcurrentPage: state.todos.currentPage,\r\n\titemsPerPage: state.todos.itemsPerPage,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// Import from libraries\r\nimport React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n// Import from redux\r\nimport { logOut } from '../actions/actions';\r\n\r\n// Material UI and styles\r\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\nimport { AssignmentTurnedIn } from '@material-ui/icons/';\r\nimport './styles/Navbar.css';\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    const { logOut } = this.props.actions;\r\n    const style = {\r\n      color: 'white',\r\n    };\r\n\r\n    const unAuthenticated = (\r\n      <div className='navbtns'>\r\n        <Link to='/login' style={style}>\r\n          <Button className='navbutton' size='large' color='inherit'>\r\n            Login\r\n          </Button>\r\n        </Link>\r\n\r\n        <Link to='/signup' style={style}>\r\n          <Button className='navbutton' size='large' color='inherit'>\r\n            Sign Up\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n\r\n    const authenticated = (\r\n      <div className='navbtns'>\r\n        <Link to='/' style={style}>\r\n          <Button className='navbutton' size='large' color='inherit'>\r\n            Tasks\r\n          </Button>\r\n        </Link>\r\n\r\n        <Button\r\n          className='navbutton'\r\n          size='large'\r\n          color='inherit'\r\n          onClick={() => {\r\n            localStorage.removeItem('auth-token');\r\n            logOut();\r\n          }}\r\n          style={{ textDecoration: 'underline' }}\r\n        >\r\n          Logout\r\n        </Button>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <AppBar position='static'>\r\n        <Toolbar id='toolbar'>\r\n          <div>\r\n            <Typography variant='h6'>\r\n              <AssignmentTurnedIn />\r\n              Task App\r\n            </Typography>\r\n          </div>\r\n          {this.props.isLoggedIn ? authenticated : unAuthenticated}\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.user.isLoggedIn,\r\n});\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators({ logOut }, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Navbar);\r\n","// Import from libraries\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Link } from 'react-router-dom/';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n// Import from redux\r\nimport { logInUser } from '../../actions/actions';\r\n\r\n// Material UI and Styles\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormControlLabel,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Checkbox,\r\n} from '@material-ui/core/';\r\nimport Alert from '@material-ui/lab/Alert/Alert';\r\nimport '../styles/Login.css';\r\n\r\nexport class Login extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    failed: false,\r\n  };\r\n\r\n  handleEmailChange = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  handlePasswordChange = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      password: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    const { logInUser } = this.props.actions;\r\n    const userData = {\r\n      email: email.toLowerCase(),\r\n      password,\r\n    };\r\n    axios\r\n      .post('https://exceed-react.herokuapp.com/api/auth/login', userData)\r\n      .then((res) => {\r\n        localStorage.setItem('auth-token', `${res.data}`);\r\n        axios.defaults.headers.common['auth-token'] = res.data;\r\n      })\r\n      .then(() => {\r\n        const token = localStorage.getItem('auth-token');\r\n        const decodedToken = jwtDecode(token);\r\n        logInUser({\r\n          token,\r\n          decodedToken,\r\n        });\r\n      })\r\n      .catch(() =>\r\n        this.setState({\r\n          ...this.state,\r\n          password: '',\r\n          failed: true,\r\n        })\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container component='main' maxWidth='xs'>\r\n        <CssBaseline />\r\n        <div className='paper'>\r\n          <Avatar>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component='h1' variant='h5'>\r\n            Sign in\r\n          </Typography>\r\n          {this.state.failed ? (\r\n            <Alert severity='error'>Email or password is incorrect</Alert>\r\n          ) : null}\r\n          <form className='form' onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              id='email'\r\n              label='Email Address'\r\n              name='email'\r\n              value={this.state.email}\r\n              onChange={this.handleEmailChange}\r\n              autoComplete='email'\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              name='password'\r\n              label='Password'\r\n              type='password'\r\n              id='password'\r\n              value={this.state.password}\r\n              onChange={this.handlePasswordChange}\r\n              autoComplete='current-password'\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value='remember' color='primary' />}\r\n              label='Remember me'\r\n            />\r\n            <Button\r\n              type='submit'\r\n              fullWidth\r\n              variant='contained'\r\n              color='primary'\r\n              className='sumbitbtn'\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to='#' variant='body2'>\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to='/signup' variant='body2'>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}></Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.user.users,\r\n});\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators({ logInUser }, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Login);\r\n","// Import from libraries\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Link } from 'react-router-dom/';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n// Import from redux\r\nimport { logInUser } from '../../actions/actions';\r\n\r\n// Material UI and Styles\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from '@material-ui/core/';\r\nimport Alert from '@material-ui/lab/Alert/Alert';\r\nimport '../styles/Login.css';\r\n\r\nexport class SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      error: false,\r\n      errorMessage: '',\r\n    };\r\n  }\r\n\r\n  handleEmailChange = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  handlePassChange = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      password: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleConfPassChange = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      confirmPassword: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { password, confirmPassword, email } = this.state;\r\n    const { logInUser } = this.props.actions;\r\n\r\n    if (password === confirmPassword) {\r\n      const userData = {\r\n        email: email.toLowerCase(),\r\n        password,\r\n      };\r\n      axios\r\n        .post('https://exceed-react.herokuapp.com/api/auth/register', userData)\r\n        .then(() =>\r\n          axios\r\n            .post('https://exceed-react.herokuapp.com/api/auth/login', userData)\r\n            .then((res) => {\r\n              localStorage.setItem('auth-token', `${res.data}`);\r\n              axios.defaults.headers.common['auth-token'] = res.data;\r\n            })\r\n            .then(() => {\r\n              const token = localStorage.getItem('auth-token');\r\n              const decodedToken = jwtDecode(token);\r\n              logInUser({\r\n                token,\r\n                decodedToken,\r\n              });\r\n            })\r\n        )\r\n        .catch(() =>\r\n          this.setState({\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            error: true,\r\n            errorMessage: `Email already exists`,\r\n          })\r\n        );\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        password: '',\r\n        confirmPassword: '',\r\n        error: true,\r\n        errorMessage: `Passwords didn't match`,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container component='main' maxWidth='xs'>\r\n        <CssBaseline />\r\n        <div className='paper'>\r\n          <Avatar>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component='h1' variant='h5'>\r\n            Create New Account\r\n          </Typography>\r\n          {this.state.error ? (\r\n            <Alert severity='error'>{this.state.errorMessage}</Alert>\r\n          ) : null}\r\n          <form className='form' onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              id='email'\r\n              label='Email Address'\r\n              name='email'\r\n              autoComplete='email'\r\n              autoFocus\r\n              value={this.state.email}\r\n              onChange={this.handleEmailChange}\r\n            />\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              name='password'\r\n              label='Password'\r\n              type='password'\r\n              id='password'\r\n              value={this.state.password}\r\n              onChange={this.handlePassChange}\r\n              inputProps={{ minLength: 6 }}\r\n            />\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              name='repeatPassword'\r\n              label='Repeat Password'\r\n              type='password'\r\n              id='repeatPassword'\r\n              value={this.state.confirmPassword}\r\n              onChange={this.handleConfPassChange}\r\n              inputProps={{ minLength: 6 }}\r\n            />\r\n            <Button\r\n              type='submit'\r\n              fullWidth\r\n              variant='contained'\r\n              color='primary'\r\n              className='sumbitbtn'\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link to='/login' variant='body2'>\r\n                  {'Already have an account? Sign in'}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators({ logInUser }, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(null, matchDispatchToProps)(SignUp);\r\n","// Import from libraries\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n//Import from components\r\nimport TodoPage from './components/todo/TodoPage';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/login/Login';\r\nimport SignUp from './components/signup/SignUp';\r\nimport { logInUser } from './actions/actions';\r\n\r\n//Import from Material UI\r\nimport { Container } from '@material-ui/core';\r\n\r\nclass Application extends Component {\r\n  render() {\r\n    const token = localStorage.getItem('auth-token');\r\n    const { logInUser } = this.props.actions;\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      if (decodedToken.exp * 1000 < Date.now()) {\r\n        localStorage.removeItem('auth-token');\r\n      } else {\r\n        logInUser({\r\n          token,\r\n          decodedToken,\r\n        });\r\n      }\r\n    }\r\n    const redirectNotUser = () => <Redirect to='/login' />;\r\n    const redirectUser = () => <Redirect to='/' />;\r\n    return (\r\n      <Router>\r\n        <Navbar />\r\n        <Container>\r\n          <Switch>\r\n            <Route\r\n              path='/'\r\n              component={this.props.isLoggedIn ? TodoPage : redirectNotUser}\r\n              exact\r\n            />\r\n            <Route\r\n              path='/login'\r\n              component={this.props.isLoggedIn ? redirectUser : Login}\r\n              exact\r\n            />\r\n            <Route\r\n              path='/signup'\r\n              component={this.props.isLoggedIn ? redirectUser : SignUp}\r\n              exact\r\n            />\r\n          </Switch>\r\n        </Container>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.user.isLoggedIn,\r\n});\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators({ logInUser }, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Application);\r\n","import { GET_TODOS, CHANGE_PAGE } from '../actions/actions';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  currentPage: 1,\r\n  itemsPerPage: 10,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TODOS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      };\r\n    case CHANGE_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { LOG_IN, LOG_OUT } from '../actions/actions';\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  user: '',\r\n  token: '',\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n      return {\r\n        isLoggedIn: true,\r\n        user: action.payload.decodedToken._id,\r\n        token: action.payload.token,\r\n      };\r\n    case LOG_OUT:\r\n      return {\r\n        isLoggedIn: false,\r\n        user: '',\r\n        token: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport todoReducer from './todoReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n\ttodos: todoReducer,\r\n\tuser: userReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleWare)\r\n);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about sevice workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}